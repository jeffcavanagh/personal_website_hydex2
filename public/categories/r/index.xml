<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Jeff Cavanagh</title>
    <link>/categories/r/</link>
    <description>Recent content in R on Jeff Cavanagh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 05 Aug 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Processing Text Data</title>
      <link>/analytics/processing-text-data/</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/analytics/processing-text-data/</guid>
      <description>Text data cannot be processed identically to numerical or categorical data. Is there a way then to analyze text data insight from it??
Of course! All it takes is an adapted approach and a little more work upfront.
Quite a bit of potential data is unstructured and textual in nature, and does not operate by the same rules as numerical or categorical data. That does not mean there is not value to this format of data though.</description>
    </item>
    
    <item>
      <title>Web Scraping</title>
      <link>/analytics/web-scrape/</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/analytics/web-scrape/</guid>
      <description>Unfortunately, not all data is contained within neat dataframes. Much of the freely accessible data out there is posted on webpages. This post will serve as an introduction on how to extract that data using two packages: rvest and rselenium.
Setup CSS Tool Webpages are not written in R code. They are written in HTML and CSS. A working knowledge of at least CSS is required to use the webscapring packages R provides.</description>
    </item>
    
    <item>
      <title>Hiking Trail Analysis</title>
      <link>/projects/hiking-trail-analysis/</link>
      <pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/projects/hiking-trail-analysis/</guid>
      <description>Setup trails=read.csv(&amp;quot;AllTrailsdata_nationalpark.csv&amp;quot;,header=T) attach(trails) dim(trails) ## [1] 3313 18 This data set gives information on trails in the National Parks Service. The data is publically available on Kaggle.com.
Each row is a different trail. The columns describing each trail are:
 trail_id name area_name city_name state_name country_name _geoloc (coordinates) popularity (scaled value) length (km) elevation_gain difficulty_rating (1:5) route_type (out and back, loop, point to point) visitor_usage (1:4) avg_rating (1:5) num_reviews features (dogs-no, forest, views, lake, wild-flowers, etc…) activities (birding, hiking, nature-trips, etc…) units (i,m)  Average rating was chosen as the dependent variable.</description>
    </item>
    
    <item>
      <title>Statistical Modeling Starter Kit</title>
      <link>/analytics/methods-of-regression/</link>
      <pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/analytics/methods-of-regression/</guid>
      <description>This post will cover some primary methods of regression analysis and how to apply them in R. It will also serve as a warmup for the posts that explore more advanced machine learning and AI methods.
Setup For a data set to analyze, we will look at statistics concerning the history of my favorite sports team, The Detroit Lions. This data comes from Pro Football Reference.
lions &amp;lt;- read.csv(&amp;quot;sportsref_download - sportsref_download.</description>
    </item>
    
  </channel>
</rss>