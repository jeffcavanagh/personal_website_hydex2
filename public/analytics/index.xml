<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Analytics on Jeff Cavanagh</title>
    <link>/analytics/</link>
    <description>Recent content in Analytics on Jeff Cavanagh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 05 Aug 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/analytics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Machine Learning - Basic</title>
      <link>/analytics/machine-learning-basic/</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/analytics/machine-learning-basic/</guid>
      <description>Insert Lead paragraph here.
A augue nunc lacus auctor efficitur tempor placerat, dictum volutpat mi vitae viverra porta non sem, himenaeos senectus vivamus potenti cubilia sollicitudin. Curae cursus inceptos tincidunt magna mi nibh ad enim etiam, molestie eu quis primis hendrerit taciti phasellus. Feugiat ultricies dictumst iaculis potenti odio laoreet urna at, ultrices curae leo accumsan proin sem lobortis.
Heading 2 Sollicitudin ornare odio blandit aenean enim lacus accumsan elementum vestibulum porta mauris lorem, ullamcorper class fermentum sem hendrerit ante augue penatibus scelerisque felis leo proin,ad nascetur venenatis sodales dignissim viverra suspendisse turpis convallis condimentum sapien.</description>
    </item>
    
    <item>
      <title>Processing Text Data</title>
      <link>/analytics/processing-text-data/</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/analytics/processing-text-data/</guid>
      <description>Text data cannot be processed identically to numerical or categorical data. Is there a way then to analyze text data insight from it??
Of course! All it takes is an adapted approach and a little more work upfront.
Quite a bit of potential data is unstructured and textual in nature, and does not operate by the same rules as numerical or categorical data. That does not mean there is not value to this format of data though.</description>
    </item>
    
    <item>
      <title>Web Scrape</title>
      <link>/analytics/web-scrape/</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/analytics/web-scrape/</guid>
      <description>Unfortunately, not all data is contained within neat dataframes. Much of the freely accessible data out there is posted on webpages. This post will serve as an introduction on how to extract that data using two packages: rvest and rselenium.
Setup CSS Tool Webpages are not written in R code. They are written in HTML and CSS. A working knowledge of at least CSS is required to use the webscapring packages R provides.</description>
    </item>
    
    <item>
      <title>Statistical Modeling Starter Kit</title>
      <link>/analytics/methods-of-regression/</link>
      <pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/analytics/methods-of-regression/</guid>
      <description>This post will cover some of the primary methods of regression analysis available in R. It will also serve as a warmup for the posts that explore Machine Learning and its applications.
Setup For our regression data we will look at statistics concerning the history of my favorite sports team, The Detroit Lions. The data comes from Pro Football Reference.
lions &amp;lt;- read.csv(&amp;quot;sportsref_download - sportsref_download.csv&amp;quot;) str(lions) ## &amp;#39;data.frame&amp;#39;: 90 obs.</description>
    </item>
    
  </channel>
</rss>